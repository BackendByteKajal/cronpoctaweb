swagger: "2.0"
info:
  title: MRBS API
  version: 1.0
  description: This is my MRBS API Documentation
  contact:
    email: kajal.jagtap@techalchemy.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE"
servers:
  - url: "http://localhost:3012/"
    description: This is my local server
schemes:
  - http
  - https
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    type: object
    properties:
      userName:
        type: string
        pattern: "^[a-zA-Z]+$"
        minLength: 3
        maxLength: 20
      lastName:
        type: string
        pattern: "^[a-zA-Z]+$"
        minLength: 3
        maxLength: 20
      employeeId:
        type: string
        pattern: "^[a-zA-Z0-9]+.*$"
        maxLength: 8
      email:
        type: string
        format: email
      password:
        type: string
        pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*]).*$"
        minLength: 8
        maxLength: 15
      repeat_password:
        type: string

  UserSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: All Users
      result:
        type: array
        items:
          $ref: "#/definitions/User"
  
  RegisterSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: User Registered Successfully
      result:
        $ref: "#/definitions/User"
  

  Guest:
    type: object
    properties:
      guestName:
        type: string

  GetAllGuestsSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: All Guests
      result:
        type: array
        items:
          $ref: "#/definitions/Guest"

  BookRoomRequest:
    type: object
    properties:
      meetRoomId:
        type: integer
      title:
        type: string
      date:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      guests:
        type: array
        items:
          $ref: "#/definitions/GuestArray"
      description:
        type: string

  BookRoomSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Your Booking completed successfully"
      result:
        $ref: "#/definitions/BookRoomResult"

  BookRoomResult:
    type: object
    properties:
      id:
        type: integer
      userId:
        type: integer
      meetRoomId:
        type: integer
      title:
        type: string
      date:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      status:
        type: string
      guests:
        type: array
        items:
          $ref: "#/definitions/GuestArray"
      description:
        type: string

  GuestArray:
    type: object
    properties:
      guests:
        type: string

  Booking:
    type: object
    properties:
      id:
        type: integer
      userId:
        type: integer
      meetRoomId:
        type: integer
      title:
        type: string
      date:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      status:
        type: string
      guests:
        type: array
        items:
          $ref: "#/definitions/GuestArray"
      description:
        type: string
      userName:
        type: string
      lastName:
        type: string
      meetingRoomName:
        type: string

  BookingsSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "All Active Bookings are here..."
      result:
        type: object
        properties:
          todays_bookings:
            type: array
            items:
              $ref: "#/definitions/Booking"
          upcoming_bookings:
            type: array
            items:
              $ref: "#/definitions/Booking"

  MyBooking:
    type: object
    properties:
      id:
        type: integer
      userId:
        type: integer
      meetRoomId:
        type: integer
      title:
        type: string
      date:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      status:
        type: string
      guests:
        type: array
        items:
          $ref: "#/definitions/GuestArray"
      description:
        type: string
      userName:
        type: string
      lastName:
        type: string
      meetingRoomName:
        type: string
      duration:
        type: string

  MyBookingSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "All my Booking History is here..."
      result:
        type: array
        items:
          $ref: "#/definitions/MyBooking"

  EditBookingRequest:
    type: object
    properties:
      meetRoomId:
        type: integer
      title:
        type: string
      date:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      guests:
        type: array
        items:
          $ref: "#/definitions/GuestArray"
      description:
        type: string

  EditBookingSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Booking updated successfully."
      result:
        $ref: "#/definitions/Booking"

  FetchBooking:
    type: object
    properties:
      id:
        type: integer
      userId:
        type: integer
      meetRoomId:
        type: integer
      title:
        type: string
      date:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      status:
        type: string
      guests:
        type: array
        items:
          $ref: "#/definitions/GuestArray"
      description:
        type: string

  FetchBookingSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Your Booking fetch Successfully"
      result:
        $ref: "#/definitions/FetchBooking"

  MeetRoom:
    type: object
    properties:
      id:
        type: integer
      meetRoomName:
        type: string
      capacity:
        type: integer
      imageUrl:
        type: string
      status:
        type: string

  AddMeetRoomSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Meeting Room added Succesfully"
      result:
        $ref: "#/definitions/MeetRoom"
  
  BookingHistory:
    type: object
    properties:
      id:
        type: integer
      userId:
        type: integer
      meetRoomId:
        type: integer
      title:
        type: string
      date:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      status:
        type: string
      guests:
        type: array
        items:
          $ref: "#/definitions/GuestArray"
      description:
        type: string
      userName:
        type: string
      lastName:
        type: string
      meetingRoomName:
        type: string
      duration:
        type: string

  GetMeetRoomHistorySuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Meeting Room History is here"
      result:
        type: array
        items:
          $ref: "#/definitions/BookingHistory"

  Booking:
    type: object
    properties:
      id:
        type: integer
      userId:
        type: integer
      meetRoomId:
        type: integer
      title:
        type: string
      date:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      status:
        type: string
      guests:
        type: array
        items:
          $ref: "#/definitions/Guest"
      description:
        type: string

  DeleteBookingSuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Your Booking deleted Successfully"
      result:
        $ref: "#/definitions/Booking"
  
  

paths:
  /deletebookings/{id}:
    delete:
      summary: Delete booking by id.
      description: Booking ID.
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successful response.

  /login:
    post:
      summary: User Login.
      description: User login using user email and password.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: User Login successful.
          schema:
            $ref: "#/definitions/UserSuccessResponse"
        400:
          description: Invalid credentials.

  /admin/login:
    post:
      summary: Login Successful.
      description: Admin login using user email and password.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Admin Login successful.
          schema:
            $ref: "#/definitions/UserSuccessResponse"
        400:
          description: Invalid credentials.

  /getAllGuests:
    get:
      summary: Get all guests.
      description: Retrieve a list of all guests.
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/GetAllGuestsSuccessResponse"

  /register:
    post:
      summary: User Registration.
      description: Register a new user.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: User registration details.
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: User Registered Successfully.
          schema:
            $ref: "#/definitions/RegisterSuccessResponse"

  /users:
    get:
      summary: Get all users.
      description: Retrieve a list of all users.
      produces:
        - application/json
      responses:
        200:
          description: Successful response containing all users.
          schema:
            $ref: "#/definitions/UserSuccessResponse"

  /bookroom:
    post:
      summary: Book a meeting room.
      description: Endpoint to book a meeting room.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: booking
          description: Request body for booking a meeting room.
          required: true
          schema:
            $ref: "#/definitions/BookRoomRequest"
      security:
        - BearerAuth: []
      responses:
        200:
          description: Booking successful.
          schema:
            $ref: "#/definitions/BookRoomSuccessResponse"    

  /bookings:
    get:
      summary: Get all bookings.
      description: Retrieve a list of all bookings.
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successful response containing all bookings.
          schema:
            $ref: "#/definitions/BookingsSuccessResponse"      

  /mybookings:
    get:
      summary: Get all my booking history.
      description: Retrieve a list of all my booking history.
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successful response containing my booking history.
          schema:
            $ref: "#/definitions/MyBookingSuccessResponse"
  
  /editbookings/{id}:
    patch:
      summary: Edit a booking by ID.
      description: Edit an existing booking by providing the booking ID and request body.
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking to be edited.
          required: true
          type: integer
          format: int64
        - in: body
          name: booking
          description: Updated booking details.
          required: true
          schema:
            $ref: "#/definitions/EditBookingRequest"
      responses:
        200:
          description: Successful response containing the updated booking details.
          schema:
            $ref: "#/definitions/EditBookingSuccessResponse"
        400:
          description: Invalid input. Please check the request data.
        404:
          description: Booking not found

  /fetchBookingWithId/{id}:
    get:
      summary: Fetch a booking by ID.
      description: Retrieve an existing booking by providing the booking ID.
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking to be fetched.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful response containing the booking details.
          schema:
            $ref: "#/definitions/FetchBookingSuccessResponse"
        404:
          description: Booking not found.

  /meetrooms:
    post:
      summary: Add a new meeting room.
      description: Add a new meeting room with image upload.
      consumes:
        - multipart/form-data
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - name: meetRoomName
          in: formData
          description: Name of the meeting room.
          required: true
          type: string
        - name: capacity
          in: formData
          description: Capacity of the meeting room.
          required: true
          type: integer
          format: int32
        - name: imageurl
          in: formData
          description: Image of the meeting room.
          required: true
          type: file
      responses:
        200:
          description: Meeting room added successfully.
          schema:
            $ref: "#/definitions/AddMeetRoomSuccessResponse"

  /meetrooms/{id}:
    get:
      summary: Get meeting room history by ID.
      description: Get meeting room history for a specific meeting room by its ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the meeting room to fetch history for.
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Meeting room history retrieved successfully.
          schema:
            $ref: "#/definitions/GetMeetRoomHistorySuccessResponse"

  /deletebookings/{id}:
    delete:
      summary: Delete booking by ID.
      description: Delete a specific booking by its ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the booking to delete.
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Booking deleted successfully.
          schema:
            $ref: "#/definitions/DeleteBookingSuccessResponse"